/**
 * Program provides an understanding of if-else and while statements.
 * @author Alyson Futral - CPSC 1210 - AO1
 * @version 09/17/2023
 */

public class NumberOperations {
    private int number;

    /**
     * Constructor initializes the number.
     * @param numberIn the number to be set.
     */
    public NumberOperations(int numberIn) {
       number = numberIn;
    }

    /**
     * Returns the value of the number.
     * @return the number.
     */
    public int getValue() {
       return number;
    }

    /**
     * Returns a string of all odd numbers less than the given number.
     * @return a string of odd numbers under the given number.
     */
    public String oddsUnder() {
       String output = ""; 
       int i = 0;
       while (i < number) {
          if (i % 2 != 0) {
             output += i + "\t";
          }
          i++;
       }
       return output;
    }

    /**
     * Returns a string of powers of two less than the given number.
     * @return a string of powers of two under the given number.
     */
    public String powersTwoUnder() {
       String output = ""; 
       int powers = 1;
       while (powers < number) {
          output += powers + "\t";
          powers = powers * 2;
       }
       return output;
    }

    /**
     * Compares the number with another number.
     * @param compareNumber the number to compare with.
     * @return 1 if greater, -1 if less, 0 if equal.
     */
    public int isGreater(int compareNumber) {
       if (number > compareNumber) {
          return 1;
       } else if (number < compareNumber) {
          return -1;
       } else {
          return 0;
       }
    }

    /**
     * Returns the string representation of the number.
     * @return the number as a string.
     */
    public String toString() {
       return number + "";
    }
}
